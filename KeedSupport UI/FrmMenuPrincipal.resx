<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>